{"ast":null,"code":"var _jsxFileName = \"/home/nenel/Projetos/sd-016-a-project-starwars-planets-search/src/context/PlanetsProvider.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\nimport useMountPlanets from '../hooks/useMountPlanets';\nimport filterPlanets from '../services/filterPlanets';\n\nfunction PlanetsProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const [planets] = useMountPlanets();\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\n  const [filterNumber, setFilterNumber] = useState(0);\n  const [filterCompare, setFilterCompare] = useState('');\n  const [filterColumn, setFilterColumn] = useState('');\n  useEffect(() => {\n    setFilteredPlanets(planets);\n  }, [planets]);\n  const planetsContext = {\n    filteredPlanets,\n    filterPlanets: inputValue => {\n      const updatePlanets = filterPlanets(inputValue, planets);\n      setFilteredPlanets(updatePlanets);\n    },\n    handleFilterBtn: () => {\n      console.log('cliquei em btn');\n      console.log('Number:', filterNumber);\n      console.log('Compare:', filterCompare);\n      console.log('Selector Column:', filterColumn);\n      filterB;\n    },\n    saveInputNumber: inputNumberValue => {\n      setFilterNumber(inputNumberValue);\n    },\n    saveCompare: inputNumberValue => {\n      setFilterCompare(inputNumberValue);\n    },\n    saveColumn: inputNumberValue => {\n      setFilterColumn(inputNumberValue);\n    }\n  };\n  return /*#__PURE__*/React.createElement(PlanetsContext.Provider, {\n    value: planetsContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.objectOf(Object).isRequired\n};\nexport default PlanetsProvider;","map":{"version":3,"sources":["/home/nenel/Projetos/sd-016-a-project-starwars-planets-search/src/context/PlanetsProvider.js"],"names":["React","useEffect","useState","PropTypes","PlanetsContext","useMountPlanets","filterPlanets","PlanetsProvider","children","planets","filteredPlanets","setFilteredPlanets","filterNumber","setFilterNumber","filterCompare","setFilterCompare","filterColumn","setFilterColumn","planetsContext","inputValue","updatePlanets","handleFilterBtn","console","log","filterB","saveInputNumber","inputNumberValue","saveCompare","saveColumn","propTypes","objectOf","Object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAEA,SAASC,eAAT,OAAuC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACrC,QAAM,CAACC,OAAD,IAAYJ,eAAe,EAAjC;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,kBAAkB,CAACF,OAAD,CAAlB;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,QAAMS,cAAc,GAAG;AACrBR,IAAAA,eADqB;AAErBJ,IAAAA,aAAa,EAAGa,UAAD,IAAgB;AAC7B,YAAMC,aAAa,GAAGd,aAAa,CAACa,UAAD,EAAaV,OAAb,CAAnC;AACAE,MAAAA,kBAAkB,CAACS,aAAD,CAAlB;AACD,KALoB;AAMrBC,IAAAA,eAAe,EAAE,MAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,YAAvB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBT,aAAxB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCP,YAAhC;AACAQ,MAAAA,OAAO;AACR,KAZoB;AAarBC,IAAAA,eAAe,EAAGC,gBAAD,IAAsB;AACrCb,MAAAA,eAAe,CAACa,gBAAD,CAAf;AACD,KAfoB;AAgBrBC,IAAAA,WAAW,EAAGD,gBAAD,IAAsB;AACjCX,MAAAA,gBAAgB,CAACW,gBAAD,CAAhB;AACD,KAlBoB;AAmBrBE,IAAAA,UAAU,EAAGF,gBAAD,IAAsB;AAChCT,MAAAA,eAAe,CAACS,gBAAD,CAAf;AACD;AArBoB,GAAvB;AAwBA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGR,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,QADH,CADF;AAKD;;AAEDD,eAAe,CAACsB,SAAhB,GAA4B;AAC1BrB,EAAAA,QAAQ,EAAEL,SAAS,CAAC2B,QAAV,CAAmBC,MAAnB,EAA2BC;AADX,CAA5B;AAIA,eAAezB,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\nimport useMountPlanets from '../hooks/useMountPlanets';\nimport filterPlanets from '../services/filterPlanets';\n\nfunction PlanetsProvider({ children }) {\n  const [planets] = useMountPlanets();\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\n  const [filterNumber, setFilterNumber] = useState(0);\n  const [filterCompare, setFilterCompare] = useState('');\n  const [filterColumn, setFilterColumn] = useState('');\n\n  useEffect(() => {\n    setFilteredPlanets(planets);\n  }, [planets]);\n\n  const planetsContext = {\n    filteredPlanets,\n    filterPlanets: (inputValue) => {\n      const updatePlanets = filterPlanets(inputValue, planets);\n      setFilteredPlanets(updatePlanets);\n    },\n    handleFilterBtn: () => {\n      console.log('cliquei em btn');\n      console.log('Number:', filterNumber);\n      console.log('Compare:', filterCompare);\n      console.log('Selector Column:', filterColumn);\n      filterB\n    },\n    saveInputNumber: (inputNumberValue) => {\n      setFilterNumber(inputNumberValue);\n    },\n    saveCompare: (inputNumberValue) => {\n      setFilterCompare(inputNumberValue);\n    },\n    saveColumn: (inputNumberValue) => {\n      setFilterColumn(inputNumberValue);\n    },\n  };\n\n  return (\n    <PlanetsContext.Provider value={ planetsContext }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.objectOf(Object).isRequired,\n};\n\nexport default PlanetsProvider;\n"]},"metadata":{},"sourceType":"module"}