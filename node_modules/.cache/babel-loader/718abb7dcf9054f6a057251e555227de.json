{"ast":null,"code":"var _jsxFileName = \"/home/nenel/Projetos/sd-016-a-project-starwars-planets-search/src/context/PlanetsProvider.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\nimport useMountPlanets from '../hooks/useMountPlanets';\nimport useFilterPlanets from '../hooks/useFilterPlanets';\n\nfunction PlanetsProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const [planets, setPlanets] = useMountPlanets();\n  console.log(useFilterePlanets());\n  return /*#__PURE__*/React.createElement(PlanetsContext.Provider, {\n    value: planets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.objectOf(Object).isRequired\n};\nexport default PlanetsProvider;","map":{"version":3,"sources":["/home/nenel/Projetos/sd-016-a-project-starwars-planets-search/src/context/PlanetsProvider.js"],"names":["React","PropTypes","PlanetsContext","useMountPlanets","useFilterPlanets","PlanetsProvider","children","planets","setPlanets","console","log","useFilterePlanets","propTypes","objectOf","Object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;;AAEA,SAASC,eAAT,OAAuC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,eAAe,EAA7C;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYC,iBAAiB,EAA7B;AACA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGJ,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD;;AAEDD,eAAe,CAACO,SAAhB,GAA4B;AAC1BN,EAAAA,QAAQ,EAAEL,SAAS,CAACY,QAAV,CAAmBC,MAAnB,EAA2BC;AADX,CAA5B;AAIA,eAAeV,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\nimport useMountPlanets from '../hooks/useMountPlanets';\nimport useFilterPlanets from '../hooks/useFilterPlanets';\n\nfunction PlanetsProvider({ children }) {\n  const [planets, setPlanets] = useMountPlanets();\n  console.log(useFilterePlanets());\n  return (\n    <PlanetsContext.Provider value={ planets }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.objectOf(Object).isRequired,\n};\n\nexport default PlanetsProvider;\n"]},"metadata":{},"sourceType":"module"}