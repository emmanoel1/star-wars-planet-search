{"ast":null,"code":"var _jsxFileName = \"/home/nenel/Projetos/sd-016-a-project-starwars-planets-search/src/context/PlanetsProvider.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\nimport useMountPlanets from '../hooks/useMountPlanets';\nimport filterPlanets from '../services/filterPlanets';\nimport useFilterByNumber from '../hooks/useFilterByNumber';\n\nfunction PlanetsProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const [planets] = useMountPlanets();\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\n  const [filterNumber, setFilterNumber] = useFilterByNumber();\n  log;\n  useEffect(() => {\n    setFilteredPlanets(planets);\n  }, [planets]);\n  const planetsContext = {\n    filteredPlanets,\n    filterPlanets: inputValue => {\n      const updatePlanets = filterPlanets(inputValue, planets);\n      setFilteredPlanets(updatePlanets);\n    },\n    handleFilterBtn: () => {\n      // const updateSelectInput = filterByNumber(value);\n      console.log('btn');\n    }\n  };\n  return /*#__PURE__*/React.createElement(PlanetsContext.Provider, {\n    value: planetsContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.objectOf(Object).isRequired\n};\nexport default PlanetsProvider;","map":{"version":3,"sources":["/home/nenel/Projetos/sd-016-a-project-starwars-planets-search/src/context/PlanetsProvider.js"],"names":["React","useEffect","useState","PropTypes","PlanetsContext","useMountPlanets","filterPlanets","useFilterByNumber","PlanetsProvider","children","planets","filteredPlanets","setFilteredPlanets","filterNumber","setFilterNumber","log","planetsContext","inputValue","updatePlanets","handleFilterBtn","console","propTypes","objectOf","Object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;;AAEA,SAASC,eAAT,OAAuC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACrC,QAAM,CAACC,OAAD,IAAYL,eAAe,EAAjC;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCP,iBAAiB,EAAzD;AACAQ,EAAAA,GAAG;AAEHd,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,kBAAkB,CAACF,OAAD,CAAlB;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,QAAMM,cAAc,GAAG;AACrBL,IAAAA,eADqB;AAErBL,IAAAA,aAAa,EAAGW,UAAD,IAAgB;AAC7B,YAAMC,aAAa,GAAGZ,aAAa,CAACW,UAAD,EAAaP,OAAb,CAAnC;AACAE,MAAAA,kBAAkB,CAACM,aAAD,CAAlB;AACD,KALoB;AAMrBC,IAAAA,eAAe,EAAE,MAAM;AACrB;AACAC,MAAAA,OAAO,CAACL,GAAR,CAAY,KAAZ;AACD;AAToB,GAAvB;AAYA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QADH,CADF;AAKD;;AAEDD,eAAe,CAACa,SAAhB,GAA4B;AAC1BZ,EAAAA,QAAQ,EAAEN,SAAS,CAACmB,QAAV,CAAmBC,MAAnB,EAA2BC;AADX,CAA5B;AAIA,eAAehB,eAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\nimport useMountPlanets from '../hooks/useMountPlanets';\nimport filterPlanets from '../services/filterPlanets';\nimport useFilterByNumber from '../hooks/useFilterByNumber';\n\nfunction PlanetsProvider({ children }) {\n  const [planets] = useMountPlanets();\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\n  const [filterNumber, setFilterNumber] = useFilterByNumber();\n  log\n\n  useEffect(() => {\n    setFilteredPlanets(planets);\n  }, [planets]);\n\n  const planetsContext = {\n    filteredPlanets,\n    filterPlanets: (inputValue) => {\n      const updatePlanets = filterPlanets(inputValue, planets);\n      setFilteredPlanets(updatePlanets);\n    },\n    handleFilterBtn: () => {\n      // const updateSelectInput = filterByNumber(value);\n      console.log('btn');\n    },\n  };\n\n  return (\n    <PlanetsContext.Provider value={ planetsContext }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.objectOf(Object).isRequired,\n};\n\nexport default PlanetsProvider;\n"]},"metadata":{},"sourceType":"module"}